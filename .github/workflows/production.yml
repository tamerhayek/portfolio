name: Production CI/CD

on:
  push:
    branches:
      - main
jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Format code
        run: pnpm format

      - name: Check code
        run: pnpm check

      - name: Lint code
        run: pnpm lint

      - name: Build code
        run: pnpm build

      # - name: Test code
      #   run: pnpm test:setup && pnpm test

  deploy:
    needs: verify
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://tamerhayek.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.PRODUCTION_SSH_HOST }}
          port: ${{ secrets.PRODUCTION_SSH_PORT }}
          username: ${{ secrets.PRODUCTION_SSH_USERNAME }}
          password: ${{ secrets.PRODUCTION_SSH_PASSWORD }}
          script_stop: true
          script: |
            echo "Finding NVM"
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd portfolio
            echo "Pulling changes"
            git pull
            echo "Rebuilding web"
            pnpm docker:start:web
